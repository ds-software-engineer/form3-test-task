// Code generated by mockery v2.12.3. DO NOT EDIT.

package transport

import mock "github.com/stretchr/testify/mock"

// MockHTTPProvider is an autogenerated mock type for the HTTPProvider type
type MockHTTPProvider struct {
	mock.Mock
}

// Do provides a mock function with given fields: method, endpoint, data
func (_m *MockHTTPProvider) Do(method string, endpoint string, data interface{}) ([]byte, error) {
	ret := _m.Called(method, endpoint, data)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(string, string, interface{}) []byte); ok {
		r0 = rf(method, endpoint, data)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, interface{}) error); ok {
		r1 = rf(method, endpoint, data)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type NewMockHTTPProviderT interface {
	mock.TestingT
	Cleanup(func())
}

// NewMockHTTPProvider creates a new instance of MockHTTPProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockHTTPProvider(t NewMockHTTPProviderT) *MockHTTPProvider {
	mock := &MockHTTPProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
